export type Day = 1 | 2 | 3 | 4 | 5 | 6 | 7; // Mon..Sun\n\nexport interface Meeting {\n  day: Day;\n  start: number;\n  end: number;\n  room?: string;\n  kind?: 'LEC' | 'LAB' | 'SEM' | 'OTH';\n}\n\nexport interface Section {\n  id: string;\n  sectionCode: string;\n  instructor?: string;\n  meetings: Meeting[];\n  component?: 'LEC' | 'LAB' | 'SEM' | 'OTH';\n  linkedGroup?: string;\n  capacity?: number;\n  enrolled?: number;\n  waitlist?: number;\n  open?: boolean;\n}\n\nexport interface Course {\n  id: string;\n  code: string;\n  name: string;\n  units?: number;\n  components?: ('LEC' | 'LAB' | 'SEM' | 'OTH')[];\n  sections: Section[];\n}\n\nexport interface Preferences {\n  mode: 'morning' | 'afternoon';\n  minimizeGaps: number;\n  earliestStart?: number;\n  latestEnd?: number;\n}\n\nexport interface SolveRequest {\n  courses: Course[];\n  prefs: Preferences;\n  topK: number;\n}\n\nexport interface SolveResultItem {\n  sections: string[];\n  score: number;\n}\n\nexport interface SolveResponse {\n  results: SolveResultItem[];\n  rationale?: string;\n}\n
